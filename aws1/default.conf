
upstream nma-gatekeeper {
 server localhost:1111;
}

server {

  listen 80;

  server_name nma-access-330369b3bbc8e232.elb.eu-north-1.amazonaws.com;


  # This is needed to allow the frontend to access the backend, but consider to fix this in another way
  add_header 'Access-Control-Allow-Origin' '*';

  ### Frontend  ###

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Authorization "";
    auth_basic	"Restricted";
    auth_basic_user_file	/etc/nginx/.htpasswd;

    proxy_pass http://nma-gatekeeper;
  }


  location /manifest.json {
    default_type application/x-web-app-manifest+json;

    proxy_pass http://nma-gatekeeper;
  }

  location /sockjs-node {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";

    proxy_pass http://nma-gatekeeper;
  }

  ### Backend Document APIs  ###

  location /api/fileDownload {

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # rewrite path, replace /api with /api/proxy/FILESTORE?url=
    rewrite /api(.*) /api/proxy/FILESTORE?url=binaryItem$1$args break;

    proxy_pass http://nma-gatekeeper;
  }

  location /api/pdfDownload {

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # rewrite path, replace /api with /api/proxy/FILESTORE?url=
    # ($args to keep any incoming parameters)
    rewrite /api(.*) /api/proxy/FILESTORE?url=binaryItem$1$args break;

    proxy_pass http://nma-gatekeeper;
}


  location /api/fileDownloadById {

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # rewrite path, replace /api with /api/proxy/FILESTORE?url=
    # ($args to keep any incoming parameters)
    rewrite /api(.*) /api/proxy/FILESTORE?url=binaryItem$1$args break;

    proxy_pass http://nma-gatekeeper;

  }

  location /api/pdfDownloadById {

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # rewrite path, replace /api/
    # ($args to keep any incoming parameters) /api/proxy/FILESTORE?url=
    rewrite /api(.*) /api/proxy/FILESTORE?url=binaryItem$1$args break;

    proxy_pass http://nma-gatekeeper;
  }

  location /api/document {

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # rewrite path, replace /api/document with /api/proxy/DOCUMENT?url=
    # ($args to keep any incoming parameters)
    rewrite /api/document(.*) /api/proxy/DOCUMENT?url=$1&$args break;

    proxy_pass http://nma-gatekeeper;
  }

  ### Price data APIs  ###

  location /api/priceData {

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # rewrite path, replace /api/priceData with /api/proxy/PRICE_DATA?url=
    # ($args to keep any incoming parameters)
    rewrite /api(.*) /api/proxy/PRICE_DATA?url=$1&$args break;

    proxy_pass http://nma-gatekeeper;
  }

  ### Statistics APIs  ###

  location /api/statistics {

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # rewrite path
    # ($args to keep any incoming parameters)
    rewrite /api(.*) /api/proxy/STATISTICS?url=$1&$args break;

    proxy_pass http://nma-gatekeeper;
  }

  ### Scraped data APIs  ###

  location /api/scrapedData {

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # rewrite path
    # ($args to keep any incoming parameters)
    rewrite /api(.*) /api/proxy/SCRAPED_DATA?url=$1&$args break;

    proxy_pass http://nma-gatekeeper;
  }
}
